name: ci-cd

on:
  push:
    branches: [ master ]

concurrency:
  group: ci-cd-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/hydianflow-api

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container

      # --- Build & push API image to GHCR ---
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push API image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          builder: ${{ steps.buildx.outputs.name }}   
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Build UI (dist/) in CI ---
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: hydianflow-ui/package-lock.json

      - name: Install deps & build UI
        working-directory: hydianflow-ui
        run: |
          npm ci
          npm run build

      # --- Ensure target dir exists on VPS, then upload dist/ ---
      - name: Prepare target dir on VPS
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            mkdir -p "${{ vars.VPS_PATH }}/ui-dist"

      - name: Sync UI dist to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          source: "hydianflow-ui/dist/*"
          target: "${{ vars.VPS_PATH }}/ui-dist"
          strip_components: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Deploy on VPS (pull image, migrate, restart)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            set -euo pipefail
            cd "${{ vars.VPS_PATH }}"

            git pull --ff-only
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            docker compose -f docker-compose.yml -f docker-compose.prod.yml pull api
            docker compose -f docker-compose.yml -f docker-compose.prod.yml run --rm migrate up
            docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d api
            docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d caddy

            docker image prune -f
