services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?POSTGRES_USER is required}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is required}
      POSTGRES_DB: ${POSTGRES_DB:?POSTGRES_DB is required}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:?POSTGRES_USER is required} -d ${POSTGRES_DB:?POSTGRES_DB is required}"]
      interval: 5s
      timeout: 3s
      retries: 20

  migrate:
    image: migrate/migrate:v4.17.1
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations:ro
    entrypoint: ["/migrate"]
    command:
      [
        "-path", "/migrations",
        "-database", "${DATABASE_URL:?DATABASE_URL is required}",
        "up"
      ]

  api:
    image: ghcr.io/ajmerr/hydianflow-api:latest
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: ${DATABASE_URL:?DATABASE_URL is required}
      DEV_AUTH: ${DEV_AUTH:?DEV_AUTH is required}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID:?GITHUB_CLIENT_ID is required}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET:?GITHUB_CLIENT_SECRET is required}
      OAUTH_REDIRECT_BASE_URL: ${OAUTH_REDIRECT_BASE_URL:?OAUTH_REDIRECT_BASE_URL is required}
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
