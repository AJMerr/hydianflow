version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: hydianflow-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-hydianflow}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-hydianflow}
      POSTGRES_DB: ${POSTGRES_DB:-hydianflow}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-hydianflow} -d ${POSTGRES_DB:-hydianflow}"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hydianflow-api
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://hydianflow:hydianflow@db:5432/hydianflow?sslmode=disable}
      DEV_AUTH: ${DEV_AUTH:-0}                 # set 1 in dev if you want auth shim
      GITHUB_WEBHOOK_SECRET: ${GITHUB_WEBHOOK_SECRET:-}
      HTTP_ADDR: ${HTTP_ADDR:-:8080}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  migrate:
    image: migrate/migrate:v4.17.0
    container_name: hydianflow-migrate
    entrypoint: ["sh", "-c"]
    # run manually: docker compose run --rm migrate up
    command: >
      "migrate -path /migrations -database
      ${DATABASE_URL:-postgres://hydianflow:hydianflow@db:5432/hydianflow?sslmode=disable}
      up"
    volumes:
      - ./migrations:/migrations:ro
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
